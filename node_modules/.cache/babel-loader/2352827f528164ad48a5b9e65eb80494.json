{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateChecksumAddress = exports.getChecksumAddress = exports.validateAndParseAddress = exports.addAddressPadding = void 0;\n/* eslint-disable no-bitwise */\n\nvar bytes_1 = require(\"@ethersproject/bytes\");\n\nvar constants_1 = require(\"../constants\");\n\nvar encode_1 = require(\"./encode\");\n\nvar hash_1 = require(\"./hash\");\n\nvar number_1 = require(\"./number\");\n\nfunction addAddressPadding(address) {\n  return (0, encode_1.addHexPrefix)((0, encode_1.removeHexPrefix)((0, number_1.toHex)((0, number_1.toBN)(address))).padStart(64, '0'));\n}\n\nexports.addAddressPadding = addAddressPadding;\n\nfunction validateAndParseAddress(address) {\n  (0, number_1.assertInRange)(address, constants_1.ZERO, constants_1.MASK_251, 'Starknet Address');\n  var result = addAddressPadding(address);\n\n  if (!result.match(/^(0x)?[0-9a-fA-F]{64}$/)) {\n    throw new Error('Invalid Address Format');\n  }\n\n  return result;\n}\n\nexports.validateAndParseAddress = validateAndParseAddress; // from https://github.com/ethers-io/ethers.js/blob/fc1e006575d59792fa97b4efb9ea2f8cca1944cf/packages/address/src.ts/index.ts#L12\n\nfunction getChecksumAddress(address) {\n  var chars = (0, encode_1.removeHexPrefix)(validateAndParseAddress(address)).toLowerCase().split('');\n  var hashed = (0, bytes_1.arrayify)((0, hash_1.keccakBn)(address), {\n    hexPad: 'left'\n  }); // in case the hash is 251 bits (63 chars) we need to pad it to 64 chars without changing the number value (\"left\")\n\n  for (var i = 0; i < chars.length; i += 2) {\n    if (hashed[i >> 1] >> 4 >= 8) {\n      chars[i] = chars[i].toUpperCase();\n    }\n\n    if ((hashed[i >> 1] & 0x0f) >= 8) {\n      chars[i + 1] = chars[i + 1].toUpperCase();\n    }\n  }\n\n  return (0, encode_1.addHexPrefix)(chars.join(''));\n}\n\nexports.getChecksumAddress = getChecksumAddress;\n\nfunction validateChecksumAddress(address) {\n  return getChecksumAddress(address) === address;\n}\n\nexports.validateChecksumAddress = validateChecksumAddress;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateChecksumAddress","getChecksumAddress","validateAndParseAddress","addAddressPadding","bytes_1","require","constants_1","encode_1","hash_1","number_1","address","addHexPrefix","removeHexPrefix","toHex","toBN","padStart","assertInRange","ZERO","MASK_251","result","match","Error","chars","toLowerCase","split","hashed","arrayify","keccakBn","hexPad","i","length","toUpperCase","join"],"sources":["/Users/rmzlb/Dropbox/Mac (2)/Documents/GitHub/carbonable-react/node_modules/starknet/dist/utils/address.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateChecksumAddress = exports.getChecksumAddress = exports.validateAndParseAddress = exports.addAddressPadding = void 0;\n/* eslint-disable no-bitwise */\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar constants_1 = require(\"../constants\");\nvar encode_1 = require(\"./encode\");\nvar hash_1 = require(\"./hash\");\nvar number_1 = require(\"./number\");\nfunction addAddressPadding(address) {\n    return (0, encode_1.addHexPrefix)((0, encode_1.removeHexPrefix)((0, number_1.toHex)((0, number_1.toBN)(address))).padStart(64, '0'));\n}\nexports.addAddressPadding = addAddressPadding;\nfunction validateAndParseAddress(address) {\n    (0, number_1.assertInRange)(address, constants_1.ZERO, constants_1.MASK_251, 'Starknet Address');\n    var result = addAddressPadding(address);\n    if (!result.match(/^(0x)?[0-9a-fA-F]{64}$/)) {\n        throw new Error('Invalid Address Format');\n    }\n    return result;\n}\nexports.validateAndParseAddress = validateAndParseAddress;\n// from https://github.com/ethers-io/ethers.js/blob/fc1e006575d59792fa97b4efb9ea2f8cca1944cf/packages/address/src.ts/index.ts#L12\nfunction getChecksumAddress(address) {\n    var chars = (0, encode_1.removeHexPrefix)(validateAndParseAddress(address)).toLowerCase().split('');\n    var hashed = (0, bytes_1.arrayify)((0, hash_1.keccakBn)(address), { hexPad: 'left' }); // in case the hash is 251 bits (63 chars) we need to pad it to 64 chars without changing the number value (\"left\")\n    for (var i = 0; i < chars.length; i += 2) {\n        if (hashed[i >> 1] >> 4 >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return (0, encode_1.addHexPrefix)(chars.join(''));\n}\nexports.getChecksumAddress = getChecksumAddress;\nfunction validateChecksumAddress(address) {\n    return getChecksumAddress(address) === address;\n}\nexports.validateChecksumAddress = validateChecksumAddress;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}