{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useStarknetExecute = void 0;\n\nconst react_1 = require(\"react\");\n\nconst __1 = require(\"..\");\n\nfunction starknetExecuteReducer(state, action) {\n  if (action.type === 'start_execute') {\n    return { ...state,\n      loading: true\n    };\n  } else if (action.type === 'set_execute_response') {\n    return { ...state,\n      data: action.data.transaction_hash,\n      error: undefined,\n      loading: false\n    };\n  } else if (action.type === 'set_execute_error') {\n    return { ...state,\n      error: action.error,\n      loading: false\n    };\n  } else if (action.type === 'reset') {\n    return { ...state,\n      data: undefined,\n      error: undefined,\n      loading: false\n    };\n  }\n\n  return state;\n}\n\nfunction useStarknetExecute(_ref) {\n  let {\n    calls,\n    metadata\n  } = _ref;\n  const {\n    addTransaction\n  } = (0, __1.useStarknetTransactionManager)();\n  const [state, dispatch] = (0, react_1.useReducer)(starknetExecuteReducer, {\n    loading: false\n  });\n  const {\n    account: accountAddress,\n    connectors\n  } = (0, __1.useStarknet)();\n  const reset = (0, react_1.useCallback)(() => {\n    dispatch({\n      type: 'reset'\n    });\n  }, [dispatch]);\n  const execute = (0, react_1.useCallback)(async () => {\n    if (calls) {\n      try {\n        let accountInterface = null;\n\n        for (const connector of connectors) {\n          const account = await connector.account();\n\n          if (account.address === accountAddress) {\n            accountInterface = account;\n            break;\n          }\n        }\n\n        if (!accountInterface) {\n          throw new Error(`No connector for address ${accountAddress}`);\n        }\n\n        dispatch({\n          type: 'start_execute'\n        });\n        const response = await accountInterface.execute(calls);\n        dispatch({\n          type: 'set_execute_response',\n          data: response\n        }); // start tracking the transaction\n\n        addTransaction({\n          status: response.code,\n          transactionHash: response.transaction_hash,\n          metadata\n        });\n      } catch (err) {\n        const message = err instanceof Error ? err.message : String(err);\n        dispatch({\n          type: 'set_execute_error',\n          error: message\n        });\n      }\n    }\n\n    return undefined;\n  }, [accountAddress, connectors, addTransaction, calls, metadata]);\n  return {\n    data: state.data,\n    loading: state.loading,\n    error: state.error,\n    reset,\n    execute\n  };\n}\n\nexports.useStarknetExecute = useStarknetExecute;","map":{"version":3,"mappings":"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","names":["starknetExecuteReducer","state","action","type","loading","data","transaction_hash","error","undefined","useStarknetExecute","calls","metadata","addTransaction","dispatch","account","accountAddress","connectors","reset","execute","accountInterface","connector","address","Error","response","status","code","transactionHash","err","message","String","exports"],"sources":["../../src/hooks/execute.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}