{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFormattedBlockIdentifier = exports.getBlockIdentifier = exports.txIdentifier = exports.formatHash = void 0;\n\nvar number_1 = require(\"../utils/number\");\n/**\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L148-L153)\n *\n * @param hashValue\n * @param hashField\n */\n\n\nfunction formatHash(hashValue) {\n  if (typeof hashValue === 'string') return hashValue;\n  return (0, number_1.toHex)((0, number_1.toBN)(hashValue));\n}\n\nexports.formatHash = formatHash;\n/**\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L156-L161)\n * @param txHash\n * @param txId\n */\n\nfunction txIdentifier(txHash, txId) {\n  if (!txHash) {\n    return \"transactionId=\".concat(JSON.stringify(txId));\n  }\n\n  var hashString = formatHash(txHash);\n  return \"transactionHash=\".concat(hashString);\n}\n\nexports.txIdentifier = txIdentifier;\n/**\n * Identifies the block to be queried.\n *\n * @param blockIdentifier - block identifier\n * @returns block identifier object\n */\n\nfunction getBlockIdentifier(blockIdentifier) {\n  if (blockIdentifier === null || blockIdentifier === 'latest') {\n    return {\n      type: 'BLOCK_NUMBER',\n      data: 'latest'\n    }; // default to latest block\n  }\n\n  if (blockIdentifier === 'pending') {\n    return {\n      type: 'BLOCK_NUMBER',\n      data: 'pending'\n    };\n  }\n\n  if (typeof blockIdentifier === 'number' || typeof blockIdentifier === 'bigint') {\n    return {\n      type: 'BLOCK_NUMBER',\n      data: blockIdentifier\n    };\n  }\n\n  if (typeof blockIdentifier === 'string' && blockIdentifier.startsWith('0x')) {\n    return {\n      type: 'BLOCK_HASH',\n      data: blockIdentifier\n    };\n  }\n\n  if (typeof blockIdentifier === 'string' && !Number.isNaN(parseInt(blockIdentifier, 10))) {\n    return {\n      type: 'BLOCK_NUMBER',\n      data: parseInt(blockIdentifier, 10)\n    };\n  }\n\n  if (typeof blockIdentifier === 'string') {\n    throw new Error(\"Invalid block identifier: \".concat(blockIdentifier));\n  }\n\n  return {\n    type: 'BLOCK_HASH',\n    data: blockIdentifier\n  };\n}\n\nexports.getBlockIdentifier = getBlockIdentifier;\n/**\n * Gets the block identifier for API request\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L164-L173)\n *\n * @param blockIdentifier\n * @returns block identifier for API request\n */\n\nfunction getFormattedBlockIdentifier(blockIdentifier) {\n  if (blockIdentifier === void 0) {\n    blockIdentifier = null;\n  }\n\n  var blockIdentifierObject = getBlockIdentifier(blockIdentifier);\n\n  if (blockIdentifierObject.type === 'BLOCK_NUMBER' && blockIdentifierObject.data === null) {\n    return '';\n  }\n\n  if (blockIdentifierObject.type === 'BLOCK_NUMBER') {\n    return \"blockNumber=\".concat(blockIdentifierObject.data);\n  }\n\n  return \"blockHash=\".concat((0, number_1.toHex)((0, number_1.toBN)(blockIdentifierObject.data)));\n}\n\nexports.getFormattedBlockIdentifier = getFormattedBlockIdentifier;","map":{"version":3,"names":["Object","defineProperty","exports","value","getFormattedBlockIdentifier","getBlockIdentifier","txIdentifier","formatHash","number_1","require","hashValue","toHex","toBN","txHash","txId","concat","JSON","stringify","hashString","blockIdentifier","type","data","startsWith","Number","isNaN","parseInt","Error","blockIdentifierObject"],"sources":["/Users/rmzlb/Dropbox/Mac (2)/Documents/GitHub/8mvmt-react/node_modules/starknet/dist/provider/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFormattedBlockIdentifier = exports.getBlockIdentifier = exports.txIdentifier = exports.formatHash = void 0;\nvar number_1 = require(\"../utils/number\");\n/**\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L148-L153)\n *\n * @param hashValue\n * @param hashField\n */\nfunction formatHash(hashValue) {\n    if (typeof hashValue === 'string')\n        return hashValue;\n    return (0, number_1.toHex)((0, number_1.toBN)(hashValue));\n}\nexports.formatHash = formatHash;\n/**\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L156-L161)\n * @param txHash\n * @param txId\n */\nfunction txIdentifier(txHash, txId) {\n    if (!txHash) {\n        return \"transactionId=\".concat(JSON.stringify(txId));\n    }\n    var hashString = formatHash(txHash);\n    return \"transactionHash=\".concat(hashString);\n}\nexports.txIdentifier = txIdentifier;\n/**\n * Identifies the block to be queried.\n *\n * @param blockIdentifier - block identifier\n * @returns block identifier object\n */\nfunction getBlockIdentifier(blockIdentifier) {\n    if (blockIdentifier === null || blockIdentifier === 'latest') {\n        return { type: 'BLOCK_NUMBER', data: 'latest' }; // default to latest block\n    }\n    if (blockIdentifier === 'pending') {\n        return { type: 'BLOCK_NUMBER', data: 'pending' };\n    }\n    if (typeof blockIdentifier === 'number' || typeof blockIdentifier === 'bigint') {\n        return { type: 'BLOCK_NUMBER', data: blockIdentifier };\n    }\n    if (typeof blockIdentifier === 'string' && blockIdentifier.startsWith('0x')) {\n        return { type: 'BLOCK_HASH', data: blockIdentifier };\n    }\n    if (typeof blockIdentifier === 'string' && !Number.isNaN(parseInt(blockIdentifier, 10))) {\n        return { type: 'BLOCK_NUMBER', data: parseInt(blockIdentifier, 10) };\n    }\n    if (typeof blockIdentifier === 'string') {\n        throw new Error(\"Invalid block identifier: \".concat(blockIdentifier));\n    }\n    return { type: 'BLOCK_HASH', data: blockIdentifier };\n}\nexports.getBlockIdentifier = getBlockIdentifier;\n/**\n * Gets the block identifier for API request\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L164-L173)\n *\n * @param blockIdentifier\n * @returns block identifier for API request\n */\nfunction getFormattedBlockIdentifier(blockIdentifier) {\n    if (blockIdentifier === void 0) { blockIdentifier = null; }\n    var blockIdentifierObject = getBlockIdentifier(blockIdentifier);\n    if (blockIdentifierObject.type === 'BLOCK_NUMBER' && blockIdentifierObject.data === null) {\n        return '';\n    }\n    if (blockIdentifierObject.type === 'BLOCK_NUMBER') {\n        return \"blockNumber=\".concat(blockIdentifierObject.data);\n    }\n    return \"blockHash=\".concat((0, number_1.toHex)((0, number_1.toBN)(blockIdentifierObject.data)));\n}\nexports.getFormattedBlockIdentifier = getFormattedBlockIdentifier;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}