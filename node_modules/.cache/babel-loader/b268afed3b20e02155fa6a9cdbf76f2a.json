{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/rmzlb/Dropbox/Mac (2)/Documents/GitHub/8mvmt-react/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StarknetBlockProvider = void 0;\n\nvar jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nvar react_1 = require(\"react\");\n\nvar starknet_1 = require(\"../starknet\");\n\nvar context_1 = require(\"./context\");\n\nfunction StarknetBlockProvider(_ref) {\n  var interval = _ref.interval,\n      children = _ref.children;\n\n  var _ref2 = (0, starknet_1.useStarknet)(),\n      library = _ref2.library;\n\n  var _ref3 = (0, react_1.useState)(undefined),\n      _ref4 = _slicedToArray(_ref3, 2),\n      block = _ref4[0],\n      setBlock = _ref4[1];\n\n  var _ref5 = (0, react_1.useState)(undefined),\n      _ref6 = _slicedToArray(_ref5, 2),\n      loading = _ref6[0],\n      setLoading = _ref6[1];\n\n  var _ref7 = (0, react_1.useState)(undefined),\n      _ref8 = _slicedToArray(_ref7, 2),\n      error = _ref8[0],\n      setError = _ref8[1];\n\n  var fetchBlock = (0, react_1.useCallback)(function () {\n    if (library) {\n      library.getBlock().then(function (newBlock) {\n        setBlock(function (oldBlock) {\n          // The new block is a different object from the old one\n          // so simply updating the value of block would cause the state\n          // to change and trigger a re-render.\n          // This is especially bad because the block is used to trigger\n          // state updates downstream.\n          // Compare the new and old block hashes and update only if\n          // they changed. Notice we use hashes and not block numbers\n          // because we want to update the block in case of rollbacks.\n          if ((oldBlock === null || oldBlock === void 0 ? void 0 : oldBlock.block_hash) === newBlock.block_hash) {\n            return oldBlock;\n          } // Reset error and return new block.\n\n\n          setError(undefined);\n          return newBlock;\n        });\n      }).catch(function () {\n        setError('failed fetching block');\n      }).finally(function () {\n        return setLoading(false);\n      });\n    }\n  }, [library, setLoading, setError, setBlock]);\n  (0, react_1.useEffect)(function () {\n    // Set to loading on first load\n    setLoading(true); // Fetch block immediately\n\n    fetchBlock();\n    var intervalId = setInterval(function () {\n      fetchBlock();\n    }, interval !== null && interval !== void 0 ? interval : 5000);\n    return function () {\n      return clearInterval(intervalId);\n    };\n  }, [fetchBlock, interval]);\n  return (0, jsx_runtime_1.jsx)(context_1.StarknetBlockContext.Provider, {\n    value: {\n      data: block,\n      loading: loading,\n      error: error\n    },\n    children: children\n  });\n}\n\nexports.StarknetBlockProvider = StarknetBlockProvider;","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;;AAGA;;AAEA;;AAOA,SAAgBA,qBAAhB,OAG6B;EAAA,IAF3BC,QAE2B,QAF3BA,QAE2B;EAAA,IAD3BC,QAC2B,QAD3BA,QAC2B;;EAC3B,YAAoB,6BAApB;EAAA,IAAQC,OAAR,SAAQA,OAAR;;EAEA,YAA0B,sBAAuCC,SAAvC,CAA1B;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EACA,YAA8B,sBAA8BF,SAA9B,CAA9B;EAAA;EAAA,IAAOG,OAAP;EAAA,IAAgBC,UAAhB;;EACA,YAA0B,sBAA6BJ,SAA7B,CAA1B;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,UAAU,GAAG,yBAAY,YAAK;IAClC,IAAIR,OAAJ,EAAa;MACXA,OAAO,CACJS,QADH,GAEGC,IAFH,CAEQ,UAACC,QAAD,EAAa;QACjBR,QAAQ,CAAC,UAACS,QAAD,EAAa;UACpB;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA,IAAI,SAAQ,SAAR,YAAQ,WAAR,oBAAQ,CAAEC,UAAV,MAAyBF,QAAQ,CAACE,UAAtC,EAAkD;YAChD,OAAOD,QAAP;UACD,CAXmB,CAapB;;;UACAL,QAAQ,CAACN,SAAD,CAAR;UACA,OAAOU,QAAP;QACD,CAhBO,CAAR;MAiBD,CApBH,EAqBGG,KArBH,CAqBS,YAAK;QACVP,QAAQ,CAAC,uBAAD,CAAR;MACD,CAvBH,EAwBGQ,OAxBH,CAwBW;QAAA,OAAMV,UAAU,CAAC,KAAD,CAAhB;MAAA,CAxBX;IAyBD;EACF,CA5BkB,EA4BhB,CAACL,OAAD,EAAUK,UAAV,EAAsBE,QAAtB,EAAgCJ,QAAhC,CA5BgB,CAAnB;EA8BA,uBAAU,YAAK;IACb;IACAE,UAAU,CAAC,IAAD,CAAV,CAFa,CAIb;;IACAG,UAAU;IAEV,IAAMQ,UAAU,GAAGC,WAAW,CAAC,YAAK;MAClCT,UAAU;IACX,CAF6B,EAE3BV,QAF2B,aAE3BA,QAF2B,cAE3BA,QAF2B,GAEf,IAFe,CAA9B;IAIA,OAAO;MAAA,OAAMoB,aAAa,CAACF,UAAD,CAAnB;IAAA,CAAP;EACD,CAZD,EAYG,CAACR,UAAD,EAAaV,QAAb,CAZH;EAcA,OACE,uBAACqB,+BAAqBC,QAAtB,EAA8B;IAACC,KAAK,EAAE;MAAEC,IAAI,EAAEpB,KAAR;MAAeE,OAAO,EAAPA,OAAf;MAAwBE,KAAK,EAALA;IAAxB,CAAR;IAAuCP,UAClEA;EAD2B,CAA9B,CADF;AAKD;;AA3DDwB","names":["StarknetBlockProvider","interval","children","library","undefined","block","setBlock","loading","setLoading","error","setError","fetchBlock","getBlock","then","newBlock","oldBlock","block_hash","catch","finally","intervalId","setInterval","clearInterval","context_1","Provider","value","data","exports"],"sources":["../../../src/providers/block/provider.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}