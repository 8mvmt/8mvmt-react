{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useStarknet } from '@starknet-react/core';\nimport React, { useEffect, useState } from 'react';\nimport { usePublicSaleOpen } from '../../adapters/minter';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PublicSaleOpen(_ref) {\n  _s();\n\n  let {\n    contractAddress\n  } = _ref;\n  const {\n    account\n  } = useStarknet();\n  const {\n    publicSaleOpen,\n    loading,\n    error,\n    refresh\n  } = usePublicSaleOpen(contractAddress);\n  const [shouldRefresh, setShouldRefresh] = useState(true);\n  console.log(`public_sale_open: ${publicSaleOpen}, loading: ${loading}, error: ${error}`);\n  useEffect(() => {\n    if (!account || !shouldRefresh) return;\n    setShouldRefresh(false);\n    refresh();\n  }, [account, shouldRefresh, refresh]);\n\n  if (!account) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: publicSaleOpen ? publicSaleOpen.toString() : null\n  }, void 0, false);\n}\n\n_s(PublicSaleOpen, \"NdY4NzPkqYf5njNJAGBmW8Fh1dA=\", false, function () {\n  return [useStarknet, usePublicSaleOpen];\n});\n\n_c = PublicSaleOpen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicSaleOpen\");","map":{"version":3,"names":["useStarknet","React","useEffect","useState","usePublicSaleOpen","PublicSaleOpen","contractAddress","account","publicSaleOpen","loading","error","refresh","shouldRefresh","setShouldRefresh","console","log","toString"],"sources":["/Users/rmzlb/Dropbox/Mac (2)/Documents/GitHub/8mvmt-react/src/components/NFT/PublicSaleOpen.tsx"],"sourcesContent":["import { useStarknet } from '@starknet-react/core'\nimport React, { useEffect, useState } from 'react'\nimport { usePublicSaleOpen } from '../../adapters/minter';\n\nexport default function PublicSaleOpen({ contractAddress }: { contractAddress: string }) {\n    const { account } = useStarknet()\n    const { publicSaleOpen, loading, error, refresh } = usePublicSaleOpen(contractAddress);\n    const [shouldRefresh, setShouldRefresh] = useState(true)\n  \n    console.log(`public_sale_open: ${publicSaleOpen}, loading: ${loading}, error: ${error}`)\n  \n    useEffect(() => {\n      if (!account || !shouldRefresh) return;\n      setShouldRefresh(false)\n      refresh()\n    }, [account, shouldRefresh, refresh]);\n\n    if (!account) {\n        return null;\n    }\n    \n    return (\n        <>\n            { publicSaleOpen ? publicSaleOpen.toString() : null }\n        </>\n    );\n  }\n"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;;AAEA,eAAe,SAASC,cAAT,OAA0E;EAAA;;EAAA,IAAlD;IAAEC;EAAF,CAAkD;EACrF,MAAM;IAAEC;EAAF,IAAcP,WAAW,EAA/B;EACA,MAAM;IAAEQ,cAAF;IAAkBC,OAAlB;IAA2BC,KAA3B;IAAkCC;EAAlC,IAA8CP,iBAAiB,CAACE,eAAD,CAArE;EACA,MAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,IAAD,CAAlD;EAEAW,OAAO,CAACC,GAAR,CAAa,qBAAoBP,cAAe,cAAaC,OAAQ,YAAWC,KAAM,EAAtF;EAEAR,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,OAAD,IAAY,CAACK,aAAjB,EAAgC;IAChCC,gBAAgB,CAAC,KAAD,CAAhB;IACAF,OAAO;EACR,CAJQ,EAIN,CAACJ,OAAD,EAAUK,aAAV,EAAyBD,OAAzB,CAJM,CAAT;;EAMA,IAAI,CAACJ,OAAL,EAAc;IACV,OAAO,IAAP;EACH;;EAED,oBACI;IAAA,UACMC,cAAc,GAAGA,cAAc,CAACQ,QAAf,EAAH,GAA+B;EADnD,iBADJ;AAKD;;GAtBqBX,c;UACAL,W,EACgCI,iB;;;KAFhCC,c"},"metadata":{},"sourceType":"module"}