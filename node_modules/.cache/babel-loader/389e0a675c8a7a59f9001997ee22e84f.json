{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useStarknetInvoke = void 0;\n\nconst react_1 = require(\"react\");\n\nconst __1 = require(\"..\");\n\nfunction starknetInvokeReducer(state, action) {\n  if (action.type === 'start_invoke') {\n    return { ...state,\n      loading: true\n    };\n  } else if (action.type === 'set_invoke_response') {\n    return { ...state,\n      data: action.data.transaction_hash,\n      error: undefined,\n      loading: false\n    };\n  } else if (action.type === 'set_invoke_error') {\n    return { ...state,\n      error: action.error,\n      loading: false\n    };\n  } else if (action.type === 'reset') {\n    return { ...state,\n      data: undefined,\n      error: undefined,\n      loading: false\n    };\n  }\n\n  return state;\n}\n\nfunction useStarknetInvoke(_ref) {\n  let {\n    contract,\n    method\n  } = _ref;\n  const {\n    addTransaction\n  } = (0, __1.useStarknetTransactionManager)();\n  const [state, dispatch] = (0, react_1.useReducer)(starknetInvokeReducer, {\n    loading: false\n  });\n  const reset = (0, react_1.useCallback)(() => {\n    dispatch({\n      type: 'reset'\n    });\n  }, [dispatch]);\n  const invoke = (0, react_1.useCallback)(async _ref2 => {\n    let {\n      args,\n      overrides,\n      metadata\n    } = _ref2;\n\n    if (contract && method && args) {\n      try {\n        dispatch({\n          type: 'start_invoke'\n        });\n        const response = await contract.invoke(method, args, overrides);\n        dispatch({\n          type: 'set_invoke_response',\n          data: response\n        }); // start tracking the transaction\n\n        addTransaction({\n          status: response.code,\n          transactionHash: response.transaction_hash,\n          metadata\n        });\n      } catch (err) {\n        const message = err instanceof Error ? err.message : String(err);\n        dispatch({\n          type: 'set_invoke_error',\n          error: message\n        });\n      }\n    }\n\n    return undefined;\n  }, [contract, method, addTransaction]);\n  return {\n    data: state.data,\n    loading: state.loading,\n    error: state.error,\n    reset,\n    invoke\n  };\n}\n\nexports.useStarknetInvoke = useStarknetInvoke;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AA4BA,SAASA,qBAAT,CAA+BC,KAA/B,EAA6CC,MAA7C,EAA2D;EACzD,IAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;IAClC,OAAO,EACL,GAAGF,KADE;MAELG,OAAO,EAAE;IAFJ,CAAP;EAID,CALD,MAKO,IAAIF,MAAM,CAACC,IAAP,KAAgB,qBAApB,EAA2C;IAChD,OAAO,EACL,GAAGF,KADE;MAELI,IAAI,EAAEH,MAAM,CAACG,IAAP,CAAYC,gBAFb;MAGLC,KAAK,EAAEC,SAHF;MAILJ,OAAO,EAAE;IAJJ,CAAP;EAMD,CAPM,MAOA,IAAIF,MAAM,CAACC,IAAP,KAAgB,kBAApB,EAAwC;IAC7C,OAAO,EACL,GAAGF,KADE;MAELM,KAAK,EAAEL,MAAM,CAACK,KAFT;MAGLH,OAAO,EAAE;IAHJ,CAAP;EAKD,CANM,MAMA,IAAIF,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;IAClC,OAAO,EACL,GAAGF,KADE;MAELI,IAAI,EAAEG,SAFD;MAGLD,KAAK,EAAEC,SAHF;MAILJ,OAAO,EAAE;IAJJ,CAAP;EAMD;;EACD,OAAOH,KAAP;AACD;;AAsBD,SAAgBQ,iBAAhB,OAGwB;EAAA,IAH+B;IACrDC,QADqD;IAErDC;EAFqD,CAG/B;EACtB,MAAM;IAAEC;EAAF,IAAqB,wCAA3B;EACA,MAAM,CAACX,KAAD,EAAQY,QAAR,IAAoB,wBAAWb,qBAAX,EAAkC;IAC1DI,OAAO,EAAE;EADiD,CAAlC,CAA1B;EAIA,MAAMU,KAAK,GAAG,yBAAY,MAAK;IAC7BD,QAAQ,CAAC;MAAEV,IAAI,EAAE;IAAR,CAAD,CAAR;EACD,CAFa,EAEX,CAACU,QAAD,CAFW,CAAd;EAIA,MAAME,MAAM,GAAG,yBACb,eAAuD;IAAA,IAAhD;MAAEC,IAAF;MAAQC,SAAR;MAAmBC;IAAnB,CAAgD;;IACrD,IAAIR,QAAQ,IAAIC,MAAZ,IAAsBK,IAA1B,EAAgC;MAC9B,IAAI;QACFH,QAAQ,CAAC;UAAEV,IAAI,EAAE;QAAR,CAAD,CAAR;QACA,MAAMgB,QAAQ,GAAG,MAAMT,QAAQ,CAACK,MAAT,CAAgBJ,MAAhB,EAAwBK,IAAxB,EAA8BC,SAA9B,CAAvB;QACAJ,QAAQ,CAAC;UAAEV,IAAI,EAAE,qBAAR;UAA+BE,IAAI,EAAEc;QAArC,CAAD,CAAR,CAHE,CAIF;;QACAP,cAAc,CAAC;UACbQ,MAAM,EAAED,QAAQ,CAACE,IADJ;UAEbC,eAAe,EAAEH,QAAQ,CAACb,gBAFb;UAGbY;QAHa,CAAD,CAAd;MAKD,CAVD,CAUE,OAAOK,GAAP,EAAY;QACZ,MAAMC,OAAO,GAAGD,GAAG,YAAYE,KAAf,GAAuBF,GAAG,CAACC,OAA3B,GAAqCE,MAAM,CAACH,GAAD,CAA3D;QACAV,QAAQ,CAAC;UAAEV,IAAI,EAAE,kBAAR;UAA4BI,KAAK,EAAEiB;QAAnC,CAAD,CAAR;MACD;IACF;;IACD,OAAOhB,SAAP;EACD,CAnBY,EAoBb,CAACE,QAAD,EAAWC,MAAX,EAAmBC,cAAnB,CApBa,CAAf;EAuBA,OAAO;IAAEP,IAAI,EAAEJ,KAAK,CAACI,IAAd;IAAoBD,OAAO,EAAEH,KAAK,CAACG,OAAnC;IAA4CG,KAAK,EAAEN,KAAK,CAACM,KAAzD;IAAgEO,KAAhE;IAAuEC;EAAvE,CAAP;AACD;;AArCDY","names":["starknetInvokeReducer","state","action","type","loading","data","transaction_hash","error","undefined","useStarknetInvoke","contract","method","addTransaction","dispatch","reset","invoke","args","overrides","metadata","response","status","code","transactionHash","err","message","Error","String","exports"],"sources":["../../src/hooks/invoke.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}