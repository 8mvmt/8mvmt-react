{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bigNumberishArrayToDecimalStringArray = exports.assertInRange = exports.toFelt = exports.hexToDecimalString = exports.toHex = exports.toBN = exports.isHex = void 0;\n\nvar bn_js_1 = __importStar(require(\"bn.js\"));\n\nvar minimalistic_assert_1 = __importDefault(require(\"minimalistic-assert\"));\n\nvar encode_1 = require(\"./encode\");\n\nfunction isHex(hex) {\n  return hex.startsWith('0x');\n}\n\nexports.isHex = isHex;\n\nfunction toBN(number, base) {\n  if (typeof number === 'string') {\n    // eslint-disable-next-line no-param-reassign\n    number = number.toLowerCase();\n  }\n\n  if (typeof number === 'string' && isHex(number) && !base) return new bn_js_1.default((0, encode_1.removeHexPrefix)(number), 'hex');\n  return new bn_js_1.default(number, base);\n}\n\nexports.toBN = toBN;\n\nfunction toHex(number) {\n  return (0, encode_1.addHexPrefix)(number.toString('hex'));\n}\n\nexports.toHex = toHex;\n\nfunction hexToDecimalString(hex) {\n  return toBN(\"0x\".concat(hex.replace(/^0x/, ''))).toString();\n}\n\nexports.hexToDecimalString = hexToDecimalString;\n\nfunction toFelt(num) {\n  if ((0, bn_js_1.isBN)(num)) {\n    return num.toString();\n  }\n\n  return toBN(num).toString();\n}\n\nexports.toFelt = toFelt;\n/*\n Asserts input is equal to or greater then lowerBound and lower then upperBound.\n Assert message specifies inputName.\n input, lowerBound, and upperBound should be of type BN.\n inputName should be a string.\n*/\n\nfunction assertInRange(input, lowerBound, upperBound, inputName) {\n  if (inputName === void 0) {\n    inputName = '';\n  }\n\n  var messageSuffix = inputName === '' ? 'invalid length' : \"invalid \".concat(inputName, \" length\");\n  var inputBn = toBN(input);\n  (0, minimalistic_assert_1.default)(inputBn.gte(toBN(lowerBound)) && inputBn.lt(toBN(upperBound)), \"Message not signable, \".concat(messageSuffix, \".\"));\n}\n\nexports.assertInRange = assertInRange;\n\nfunction bigNumberishArrayToDecimalStringArray(rawCalldata) {\n  return rawCalldata.map(function (x) {\n    return toBN(x).toString(10);\n  });\n}\n\nexports.bigNumberishArrayToDecimalStringArray = bigNumberishArrayToDecimalStringArray;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","bigNumberishArrayToDecimalStringArray","assertInRange","toFelt","hexToDecimalString","toHex","toBN","isHex","bn_js_1","require","minimalistic_assert_1","encode_1","hex","startsWith","number","base","toLowerCase","default","removeHexPrefix","addHexPrefix","toString","concat","replace","num","isBN","input","lowerBound","upperBound","inputName","messageSuffix","inputBn","gte","lt","rawCalldata","map","x"],"sources":["/Users/rmzlb/Dropbox/Mac (2)/Documents/GitHub/8mvmt-react/node_modules/starknet/dist/utils/number.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bigNumberishArrayToDecimalStringArray = exports.assertInRange = exports.toFelt = exports.hexToDecimalString = exports.toHex = exports.toBN = exports.isHex = void 0;\nvar bn_js_1 = __importStar(require(\"bn.js\"));\nvar minimalistic_assert_1 = __importDefault(require(\"minimalistic-assert\"));\nvar encode_1 = require(\"./encode\");\nfunction isHex(hex) {\n    return hex.startsWith('0x');\n}\nexports.isHex = isHex;\nfunction toBN(number, base) {\n    if (typeof number === 'string') {\n        // eslint-disable-next-line no-param-reassign\n        number = number.toLowerCase();\n    }\n    if (typeof number === 'string' && isHex(number) && !base)\n        return new bn_js_1.default((0, encode_1.removeHexPrefix)(number), 'hex');\n    return new bn_js_1.default(number, base);\n}\nexports.toBN = toBN;\nfunction toHex(number) {\n    return (0, encode_1.addHexPrefix)(number.toString('hex'));\n}\nexports.toHex = toHex;\nfunction hexToDecimalString(hex) {\n    return toBN(\"0x\".concat(hex.replace(/^0x/, ''))).toString();\n}\nexports.hexToDecimalString = hexToDecimalString;\nfunction toFelt(num) {\n    if ((0, bn_js_1.isBN)(num)) {\n        return num.toString();\n    }\n    return toBN(num).toString();\n}\nexports.toFelt = toFelt;\n/*\n Asserts input is equal to or greater then lowerBound and lower then upperBound.\n Assert message specifies inputName.\n input, lowerBound, and upperBound should be of type BN.\n inputName should be a string.\n*/\nfunction assertInRange(input, lowerBound, upperBound, inputName) {\n    if (inputName === void 0) { inputName = ''; }\n    var messageSuffix = inputName === '' ? 'invalid length' : \"invalid \".concat(inputName, \" length\");\n    var inputBn = toBN(input);\n    (0, minimalistic_assert_1.default)(inputBn.gte(toBN(lowerBound)) && inputBn.lt(toBN(upperBound)), \"Message not signable, \".concat(messageSuffix, \".\"));\n}\nexports.assertInRange = assertInRange;\nfunction bigNumberishArrayToDecimalStringArray(rawCalldata) {\n    return rawCalldata.map(function (x) { return toBN(x).toString(10); });\n}\nexports.bigNumberishArrayToDecimalStringArray = bigNumberishArrayToDecimalStringArray;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}