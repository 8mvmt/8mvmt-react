{"ast":null,"code":"import{useStarknetCall}from\"@starknet-react/core\";import{useMinterContract}from\"../hooks/minter\";export function useMaxBuyPerTx(contractAddress){var _useMinterContract=useMinterContract(contractAddress),minter=_useMinterContract.contract;var _useStarknetCall=useStarknetCall({contract:minter,method:'max_buy_per_tx',args:[]}),data=_useStarknetCall.data,loading=_useStarknetCall.loading,error=_useStarknetCall.error,refresh=_useStarknetCall.refresh;return{maxBuyPerTx:data,error:error,loading:loading,refresh:refresh};}export function useMaxSupplyForMint(contractAddress){var _useMinterContract2=useMinterContract(contractAddress),minter=_useMinterContract2.contract;var _useStarknetCall2=useStarknetCall({contract:minter,method:'max_supply_for_mint',args:[]}),data=_useStarknetCall2.data,loading=_useStarknetCall2.loading,error=_useStarknetCall2.error,refresh=_useStarknetCall2.refresh;var maxSupply=data?data[0]:undefined;return{maxSupplyForMint:maxSupply===null||maxSupply===void 0?void 0:maxSupply.low,error:error,loading:loading,refresh:refresh};}export function usePublicSaleOpen(contractAddress){var _useMinterContract3=useMinterContract(contractAddress),minter=_useMinterContract3.contract;var _useStarknetCall3=useStarknetCall({contract:minter,method:'public_sale_open',args:[]}),data=_useStarknetCall3.data,loading=_useStarknetCall3.loading,error=_useStarknetCall3.error,refresh=_useStarknetCall3.refresh;return{publicSaleOpen:data,error:error,loading:loading,refresh:refresh};}export function usePaymentTokenAddress(contractAddress){var _useMinterContract4=useMinterContract(contractAddress),minter=_useMinterContract4.contract;var _useStarknetCall4=useStarknetCall({contract:minter,method:'payment_token_address',args:[]}),data=_useStarknetCall4.data,loading=_useStarknetCall4.loading,error=_useStarknetCall4.error,refresh=_useStarknetCall4.refresh;return{paymentTokenAddress:data,error:error,loading:loading,refresh:refresh};}export function useProjectNftAddress(contractAddress){var _useMinterContract5=useMinterContract(contractAddress),minter=_useMinterContract5.contract;var _useStarknetCall5=useStarknetCall({contract:minter,method:'project_nft_address',args:[]}),data=_useStarknetCall5.data,loading=_useStarknetCall5.loading,error=_useStarknetCall5.error,refresh=_useStarknetCall5.refresh;return{projectNftAddress:data,error:error,loading:loading,refresh:refresh};}export function useReservedSupplyForMint(contractAddress){var _useMinterContract6=useMinterContract(contractAddress),minter=_useMinterContract6.contract;var _useStarknetCall6=useStarknetCall({contract:minter,method:'reserved_supply_for_mint',args:[]}),data=_useStarknetCall6.data,loading=_useStarknetCall6.loading,error=_useStarknetCall6.error,refresh=_useStarknetCall6.refresh;var reservedSupply=data?data[0]:undefined;return{reservedSupplyForMint:reservedSupply===null||reservedSupply===void 0?void 0:reservedSupply.low,error:error,loading:loading,refresh:refresh};}export function useUnitPrice(contractAddress){var _useMinterContract7=useMinterContract(contractAddress),minter=_useMinterContract7.contract;var _useStarknetCall7=useStarknetCall({contract:minter,method:'unit_price',args:[]}),data=_useStarknetCall7.data,loading=_useStarknetCall7.loading,error=_useStarknetCall7.error,refresh=_useStarknetCall7.refresh;var price=data?data[0]:undefined;return{unitPrice:price===null||price===void 0?void 0:price.low,error:error,loading:loading,refresh:refresh};}export function useWhitelistedSaleOpen(contractAddress){var _useMinterContract8=useMinterContract(contractAddress),minter=_useMinterContract8.contract;var _useStarknetCall8=useStarknetCall({contract:minter,method:'whitelisted_sale_open',args:[]}),data=_useStarknetCall8.data,loading=_useStarknetCall8.loading,error=_useStarknetCall8.error,refresh=_useStarknetCall8.refresh;return{whitelistedSaleOpen:data,error:error,loading:loading,refresh:refresh};}export function useWhitelistMerkleRoot(contractAddress){var _useMinterContract9=useMinterContract(contractAddress),minter=_useMinterContract9.contract;var _useStarknetCall9=useStarknetCall({contract:minter,method:'whitelist_merkle_root',args:[]}),data=_useStarknetCall9.data,loading=_useStarknetCall9.loading,error=_useStarknetCall9.error,refresh=_useStarknetCall9.refresh;return{whitelistMerkleRoot:data,error:error,loading:loading,refresh:refresh};}","map":{"version":3,"names":["useStarknetCall","useMinterContract","useMaxBuyPerTx","contractAddress","minter","contract","method","args","data","loading","error","refresh","maxBuyPerTx","useMaxSupplyForMint","maxSupply","undefined","maxSupplyForMint","low","usePublicSaleOpen","publicSaleOpen","usePaymentTokenAddress","paymentTokenAddress","useProjectNftAddress","projectNftAddress","useReservedSupplyForMint","reservedSupply","reservedSupplyForMint","useUnitPrice","price","unitPrice","useWhitelistedSaleOpen","whitelistedSaleOpen","useWhitelistMerkleRoot","whitelistMerkleRoot"],"sources":["/Users/rmzlb/Dropbox/Mac (2)/Documents/GitHub/8mvmt-react/src/adapters/minter.ts"],"sourcesContent":["import { useStarknetCall } from \"@starknet-react/core\";\nimport { useMinterContract } from \"../hooks/minter\";\n\n\nexport function useMaxBuyPerTx(contractAddress: string) {\n    const { contract: minter } = useMinterContract(contractAddress);\n    const { data, loading, error, refresh } = useStarknetCall({ contract: minter, method: 'max_buy_per_tx', args: [] });\n    \n    return { maxBuyPerTx: data, error, loading, refresh }; \n}\n\nexport function useMaxSupplyForMint(contractAddress: string) {\n    const { contract: minter } = useMinterContract(contractAddress);\n    const { data, loading, error, refresh } = useStarknetCall({ contract: minter, method: 'max_supply_for_mint', args: [] });\n    const maxSupply = data ? data[0] : undefined;\n    return { maxSupplyForMint: maxSupply?.low, error, loading, refresh };  \n}\n\nexport function usePublicSaleOpen(contractAddress: string) {\n    const { contract: minter } = useMinterContract(contractAddress);\n    const { data, loading, error, refresh } = useStarknetCall({ contract: minter, method: 'public_sale_open', args: [] });\n    \n    return { publicSaleOpen: data, error, loading, refresh }; \n}\n\nexport function usePaymentTokenAddress(contractAddress: string) {\n    const { contract: minter } = useMinterContract(contractAddress);\n    const { data, loading, error, refresh } = useStarknetCall({ contract: minter, method: 'payment_token_address', args: [] });\n    \n    return { paymentTokenAddress: data, error, loading, refresh }; \n}\n\n\nexport function useProjectNftAddress(contractAddress: string) {\n    const { contract: minter } = useMinterContract(contractAddress);\n    const { data, loading, error, refresh } = useStarknetCall({ contract: minter, method: 'project_nft_address', args: [] });\n    \n    return { projectNftAddress: data, error, loading, refresh }; \n}\n\nexport function useReservedSupplyForMint(contractAddress: string) {\n    const { contract: minter } = useMinterContract(contractAddress);\n    const { data, loading, error, refresh } = useStarknetCall({ contract: minter, method: 'reserved_supply_for_mint', args: [] });\n    const reservedSupply = data ? data[0] : undefined;\n    return { reservedSupplyForMint: reservedSupply?.low, error, loading, refresh }; \n}\n\nexport function useUnitPrice(contractAddress: string) {\n    const { contract: minter } = useMinterContract(contractAddress);\n    const { data, loading, error, refresh } = useStarknetCall({ contract: minter, method: 'unit_price', args: [] });\n    const price = data ? data[0] : undefined;\n    return { unitPrice: price?.low, error, loading, refresh }; \n}\n\nexport function useWhitelistedSaleOpen(contractAddress: string) {\n    const { contract: minter } = useMinterContract(contractAddress);\n    const { data, loading, error, refresh } = useStarknetCall({ contract: minter, method: 'whitelisted_sale_open', args: [] });\n    \n    return { whitelistedSaleOpen: data, error, loading, refresh }; \n}\n\nexport function useWhitelistMerkleRoot(contractAddress: string) {\n    const { contract: minter } = useMinterContract(contractAddress);\n    const { data, loading, error, refresh } = useStarknetCall({ contract: minter, method: 'whitelist_merkle_root', args: [] });\n    \n    return { whitelistMerkleRoot: data, error, loading, refresh }; \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}