{"ast":null,"code":"'use strict';\n\nvar _has = function _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  while (sources.length) {\n    var source = sources.shift();\n\n    if (!source) {\n      continue;\n    }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n}; // Join array of chunks to single array.\n\n\nmodule.exports.flattenChunks = function (chunks) {\n  // calculate data length\n  var len = 0;\n\n  for (var i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  } // join chunks\n\n\n  var result = new Uint8Array(len);\n\n  for (var _i = 0, pos = 0, _l = chunks.length; _i < _l; _i++) {\n    var chunk = chunks[_i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};","map":{"version":3,"names":["_has","obj","key","Object","prototype","hasOwnProperty","call","module","exports","assign","sources","Array","slice","arguments","length","source","shift","TypeError","p","flattenChunks","chunks","len","i","l","result","Uint8Array","pos","chunk","set"],"sources":["/Users/rmzlb/Dropbox/Mac (2)/Documents/GitHub/8mvmt-react/node_modules/pako/lib/utils/common.js"],"sourcesContent":["'use strict';\n\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n"],"mappings":"AAAA;;AAGA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD,EAAMC,GAAN,EAAc;EACzB,OAAOC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CC,GAA1C,CAAP;AACD,CAFD;;AAIAK,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwB,UAAUR;AAAI;AAAd,EAA4C;EAClE,IAAMS,OAAO,GAAGC,KAAK,CAACP,SAAN,CAAgBQ,KAAhB,CAAsBN,IAAtB,CAA2BO,SAA3B,EAAsC,CAAtC,CAAhB;;EACA,OAAOH,OAAO,CAACI,MAAf,EAAuB;IACrB,IAAMC,MAAM,GAAGL,OAAO,CAACM,KAAR,EAAf;;IACA,IAAI,CAACD,MAAL,EAAa;MAAE;IAAW;;IAE1B,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;MAC9B,MAAM,IAAIE,SAAJ,CAAcF,MAAM,GAAG,oBAAvB,CAAN;IACD;;IAED,KAAK,IAAMG,CAAX,IAAgBH,MAAhB,EAAwB;MACtB,IAAIf,IAAI,CAACe,MAAD,EAASG,CAAT,CAAR,EAAqB;QACnBjB,GAAG,CAACiB,CAAD,CAAH,GAASH,MAAM,CAACG,CAAD,CAAf;MACD;IACF;EACF;;EAED,OAAOjB,GAAP;AACD,CAlBD,C,CAqBA;;;AACAM,MAAM,CAACC,OAAP,CAAeW,aAAf,GAA+B,UAACC,MAAD,EAAY;EACzC;EACA,IAAIC,GAAG,GAAG,CAAV;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,MAAM,CAACN,MAA3B,EAAmCQ,CAAC,GAAGC,CAAvC,EAA0CD,CAAC,EAA3C,EAA+C;IAC7CD,GAAG,IAAID,MAAM,CAACE,CAAD,CAAN,CAAUR,MAAjB;EACD,CANwC,CAQzC;;;EACA,IAAMU,MAAM,GAAG,IAAIC,UAAJ,CAAeJ,GAAf,CAAf;;EAEA,KAAK,IAAIC,EAAC,GAAG,CAAR,EAAWI,GAAG,GAAG,CAAjB,EAAoBH,EAAC,GAAGH,MAAM,CAACN,MAApC,EAA4CQ,EAAC,GAAGC,EAAhD,EAAmDD,EAAC,EAApD,EAAwD;IACtD,IAAIK,KAAK,GAAGP,MAAM,CAACE,EAAD,CAAlB;IACAE,MAAM,CAACI,GAAP,CAAWD,KAAX,EAAkBD,GAAlB;IACAA,GAAG,IAAIC,KAAK,CAACb,MAAb;EACD;;EAED,OAAOU,MAAP;AACD,CAlBD"},"metadata":{},"sourceType":"script"}