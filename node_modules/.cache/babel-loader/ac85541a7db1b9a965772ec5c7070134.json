{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isWalletObj = exports.getInstalledInjectedConnectors = exports.InjectedConnector = void 0;\n\nconst base_1 = require(\"./base\");\n\nconst errors_1 = require(\"../errors\");\n\nclass InjectedConnector extends base_1.Connector {\n  constructor(_ref) {\n    let {\n      options\n    } = _ref;\n    super({\n      options\n    });\n  }\n\n  available() {\n    this.ensureWallet();\n    return this._wallet !== undefined;\n  }\n\n  async ready() {\n    this.ensureWallet();\n    if (!this._wallet) return false;\n    return await this._wallet.isPreauthorized();\n  }\n\n  async connect() {\n    this.ensureWallet();\n\n    if (!this._wallet) {\n      throw new errors_1.ConnectorNotFoundError();\n    }\n\n    try {\n      await this._wallet.enable();\n    } catch {\n      // NOTE: Argent v3.0.0 swallows the `.enable` call on reject, so this won't get hit.\n      throw new errors_1.UserRejectedRequestError();\n    }\n\n    if (!this._wallet.isConnected) {\n      // NOTE: Argent v3.0.0 swallows the `.enable` call on reject, so this won't get hit.\n      throw new errors_1.UserRejectedRequestError();\n    }\n\n    return this._wallet.account;\n  }\n\n  async disconnect() {\n    this.ensureWallet();\n\n    if (!this.available()) {\n      throw new errors_1.ConnectorNotFoundError();\n    }\n\n    if (!this._wallet?.isConnected) {\n      throw new errors_1.UserNotConnectedError();\n    }\n  }\n\n  async account() {\n    this.ensureWallet();\n\n    if (!this._wallet) {\n      throw new errors_1.ConnectorNotConnectedError();\n    } // FIXME This type is wrong. account can be null if user didn't connect wallet\n\n\n    return this._wallet.account;\n  }\n\n  id() {\n    this.ensureWallet();\n\n    if (!this._wallet) {\n      throw new errors_1.ConnectorNotConnectedError();\n    }\n\n    return this._wallet.id;\n  }\n\n  name() {\n    this.ensureWallet();\n\n    if (!this._wallet) {\n      throw new errors_1.ConnectorNotConnectedError();\n    }\n\n    return this._wallet.name;\n  }\n\n  ensureWallet() {\n    const installed = getInstalledWallets();\n    const wallet = installed[this.options.id];\n\n    if (wallet) {\n      this._wallet = wallet;\n    }\n  }\n\n}\n\nexports.InjectedConnector = InjectedConnector;\n\nfunction getInstalledInjectedConnectors() {\n  const installed = Object.keys(getInstalledWallets());\n  const shuffled = shuffle(installed);\n  return shuffled.map(id => new InjectedConnector({\n    options: {\n      id\n    }\n  }));\n}\n\nexports.getInstalledInjectedConnectors = getInstalledInjectedConnectors; // The code below comes from get-starknet and it's just to show what\n// we need from that library\n\nfunction getInstalledWallets() {\n  // no browser wallets on server\n  if (typeof window === 'undefined') {\n    return {};\n  }\n\n  return Object.getOwnPropertyNames(window).reduce((wallets, key) => {\n    if (key.startsWith('starknet')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const wallet = window[key];\n\n      if ((0, exports.isWalletObj)(key, wallet) && !wallets[wallet.id]) {\n        wallets[wallet.id] = wallet;\n      }\n    }\n\n    return wallets;\n  }, {});\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nconst isWalletObj = (key, wallet) => {\n  try {\n    if (wallet && [// wallet's must have methods/members, see IStarknetWindowObject\n    'request', 'isConnected', 'provider', 'enable', 'isPreauthorized', 'on', 'off', 'version'].every(key => key in wallet)) {\n      if (key === 'starknet' && (!wallet.id || !wallet.name || !wallet.icon)) {\n        wallet.name = 'Argent X';\n        wallet.icon = '';\n      } // test for new fields only after attempting\n      // to enrich the legacy wallet ->\n\n\n      return ['id', 'name', 'icon'].every(key => key in wallet);\n    } // eslint-disable-next-line no-empty\n\n  } catch (err) {}\n\n  return false;\n};\n\nexports.isWalletObj = isWalletObj; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nconst shuffle = arr => {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n\n  return arr;\n};","map":{"version":3,"mappings":"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","names":["InjectedConnector","base_1","constructor","options","available","ensureWallet","_wallet","undefined","ready","isPreauthorized","connect","errors_1","enable","isConnected","account","disconnect","id","name","installed","getInstalledWallets","wallet","exports","getInstalledInjectedConnectors","Object","keys","shuffled","shuffle","map","window","getOwnPropertyNames","reduce","wallets","key","startsWith","isWalletObj","every","icon","err","arr","i","length","j","Math","floor","random"],"sources":["../../src/connectors/injected.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}