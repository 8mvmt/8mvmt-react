{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useStarknetManager = void 0;\n\nconst react_1 = require(\"react\");\n\nconst starknet_1 = require(\"starknet\");\n\nconst errors_1 = require(\"../../errors\");\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'set_account':\n      {\n        return { ...state,\n          account: action.account\n        };\n      }\n\n    case 'set_provider':\n      {\n        return { ...state,\n          library: action.provider ?? starknet_1.defaultProvider\n        };\n      }\n\n    case 'set_connector':\n      {\n        return { ...state,\n          connector: action.connector\n        };\n      }\n\n    case 'set_error':\n      {\n        return { ...state,\n          error: action.error\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\n\nfunction useStarknetManager(_ref) {\n  let {\n    defaultProvider: userDefaultProvider,\n    connectors: userConnectors,\n    autoConnect\n  } = _ref;\n  const connectors = userConnectors ?? [];\n  const [state, dispatch] = (0, react_1.useReducer)(reducer, {\n    library: userDefaultProvider ? userDefaultProvider : starknet_1.defaultProvider,\n    connectors\n  });\n  const {\n    account,\n    library,\n    error\n  } = state;\n  const connect = (0, react_1.useCallback)(connector => {\n    connector.connect().then(account => {\n      dispatch({\n        type: 'set_account',\n        account: account.address\n      });\n      dispatch({\n        type: 'set_provider',\n        provider: account\n      });\n      dispatch({\n        type: 'set_connector',\n        connector\n      });\n    }, err => {\n      console.error(err);\n      dispatch({\n        type: 'set_error',\n        error: new errors_1.ConnectorNotFoundError()\n      });\n    });\n  }, []);\n  const disconnect = (0, react_1.useCallback)(() => {\n    if (!state.connector) return;\n    state.connector.disconnect().then(() => {\n      dispatch({\n        type: 'set_account',\n        account: undefined\n      });\n      dispatch({\n        type: 'set_provider',\n        provider: undefined\n      });\n      dispatch({\n        type: 'set_connector',\n        connector: undefined\n      });\n    }, err => {\n      console.error(err);\n      dispatch({\n        type: 'set_error',\n        error: new errors_1.ConnectorNotFoundError()\n      });\n    });\n  }, [state.connector]);\n  (0, react_1.useEffect)(() => {\n    async function tryAutoConnect(connectors) {\n      // Autoconnect priority is defined by the order of the connectors.\n      for (let i = 0; i < connectors.length; i++) {\n        try {\n          const connector = connectors[i];\n\n          if (!(await connector.ready())) {\n            // Not already authorized, try next.\n            continue;\n          }\n\n          const account = await connector.connect();\n          dispatch({\n            type: 'set_account',\n            account: account.address\n          });\n          dispatch({\n            type: 'set_provider',\n            provider: account\n          });\n          dispatch({\n            type: 'set_connector',\n            connector\n          }); // Success, stop trying.\n\n          return;\n        } catch {// no-op, we continue trying the next connectors.\n        }\n      }\n    }\n\n    if (autoConnect && !account) {\n      tryAutoConnect(connectors);\n    } // Dependencies intentionally omitted since we only want\n    // this executed once.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return {\n    account,\n    connect,\n    disconnect,\n    connectors,\n    library,\n    error\n  };\n}\n\nexports.useStarknetManager = useStarknetManager;","map":{"version":3,"mappings":"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","names":["reducer","state","action","type","account","library","provider","starknet_1","connector","error","useStarknetManager","defaultProvider","userDefaultProvider","connectors","userConnectors","autoConnect","dispatch","connect","then","address","err","console","errors_1","disconnect","undefined","tryAutoConnect","i","length","ready","exports"],"sources":["../../../src/providers/starknet/manager.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}