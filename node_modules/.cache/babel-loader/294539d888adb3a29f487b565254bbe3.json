{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSignTypedData = void 0;\n\nconst react_1 = require(\"react\");\n\nconst starknet_1 = require(\"../providers/starknet\");\n\nfunction starknetSignReducer(state, action) {\n  if (action.type === 'start_signing') {\n    return { ...state,\n      loading: true\n    };\n  } else if (action.type === 'set_signature') {\n    return { ...state,\n      data: action.data,\n      loading: false\n    };\n  } else if (action.type === 'set_error') {\n    return { ...state,\n      error: action.error,\n      loading: false\n    };\n  } else if (action.type === 'reset') {\n    return { ...state,\n      data: undefined,\n      error: undefined,\n      loading: false\n    };\n  }\n\n  return state;\n}\n\nfunction useSignTypedData(typedData) {\n  const [state, dispatch] = (0, react_1.useReducer)(starknetSignReducer, {\n    loading: false\n  });\n  const {\n    account: accountAddress,\n    connectors\n  } = (0, starknet_1.useStarknet)();\n  const reset = (0, react_1.useCallback)(() => {\n    dispatch({\n      type: 'reset'\n    });\n  }, [dispatch]);\n  const {\n    data,\n    error,\n    loading\n  } = state;\n  const signTypedData = (0, react_1.useCallback)(async () => {\n    dispatch({\n      type: 'reset'\n    });\n    dispatch({\n      type: 'start_signing'\n    });\n\n    try {\n      let accountInterface = null;\n\n      for (const connector of connectors) {\n        const account = await connector.account();\n\n        if (account.address === accountAddress) {\n          accountInterface = account;\n          break;\n        }\n      }\n\n      if (!accountInterface) {\n        throw new Error(`No connector for address ${accountAddress}`);\n      }\n\n      const response = await accountInterface.signMessage(typedData);\n      dispatch({\n        type: 'set_signature',\n        data: response\n      });\n      return response;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : String(err);\n      dispatch({\n        type: 'set_error',\n        error: errorMessage\n      });\n      console.error(err);\n    }\n  }, [accountAddress, connectors, typedData]);\n  return {\n    data,\n    error,\n    loading,\n    signTypedData,\n    reset\n  };\n}\n\nexports.useSignTypedData = useSignTypedData;","map":{"version":3,"mappings":";;;;;;;AAEA;;AACA;;AAiCA,SAASA,mBAAT,CAA6BC,KAA7B,EAA2CC,MAA3C,EAAyD;EACvD,IAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;IACnC,OAAO,EACL,GAAGF,KADE;MAELG,OAAO,EAAE;IAFJ,CAAP;EAID,CALD,MAKO,IAAIF,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;IAC1C,OAAO,EACL,GAAGF,KADE;MAELI,IAAI,EAAEH,MAAM,CAACG,IAFR;MAGLD,OAAO,EAAE;IAHJ,CAAP;EAKD,CANM,MAMA,IAAIF,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IACtC,OAAO,EACL,GAAGF,KADE;MAELK,KAAK,EAAEJ,MAAM,CAACI,KAFT;MAGLF,OAAO,EAAE;IAHJ,CAAP;EAKD,CANM,MAMA,IAAIF,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;IAClC,OAAO,EACL,GAAGF,KADE;MAELI,IAAI,EAAEE,SAFD;MAGLD,KAAK,EAAEC,SAHF;MAILH,OAAO,EAAE;IAJJ,CAAP;EAMD;;EACD,OAAOH,KAAP;AACD;;AAUD,SAAgBO,gBAAhB,CAAiCC,SAAjC,EAAqD;EACnD,MAAM,CAACR,KAAD,EAAQS,QAAR,IAAoB,wBAAWV,mBAAX,EAAgC;IACxDI,OAAO,EAAE;EAD+C,CAAhC,CAA1B;EAIA,MAAM;IAAEO,OAAO,EAAEC,cAAX;IAA2BC;EAA3B,IAA0C,6BAAhD;EAEA,MAAMC,KAAK,GAAG,yBAAY,MAAK;IAC7BJ,QAAQ,CAAC;MAAEP,IAAI,EAAE;IAAR,CAAD,CAAR;EACD,CAFa,EAEX,CAACO,QAAD,CAFW,CAAd;EAIA,MAAM;IAAEL,IAAF;IAAQC,KAAR;IAAeF;EAAf,IAA2BH,KAAjC;EAEA,MAAMc,aAAa,GAAG,yBAAY,YAAW;IAC3CL,QAAQ,CAAC;MAAEP,IAAI,EAAE;IAAR,CAAD,CAAR;IACAO,QAAQ,CAAC;MAAEP,IAAI,EAAE;IAAR,CAAD,CAAR;;IACA,IAAI;MACF,IAAIa,gBAAgB,GAA4B,IAAhD;;MACA,KAAK,MAAMC,SAAX,IAAwBJ,UAAxB,EAAoC;QAClC,MAAMF,OAAO,GAAG,MAAMM,SAAS,CAACN,OAAV,EAAtB;;QACA,IAAIA,OAAO,CAACO,OAAR,KAAoBN,cAAxB,EAAwC;UACtCI,gBAAgB,GAAGL,OAAnB;UACA;QACD;MACF;;MACD,IAAI,CAACK,gBAAL,EAAuB;QACrB,MAAM,IAAIG,KAAJ,CAAU,4BAA4BP,cAAc,EAApD,CAAN;MACD;;MACD,MAAMQ,QAAQ,GAAG,MAAMJ,gBAAgB,CAACK,WAAjB,CAA6BZ,SAA7B,CAAvB;MACAC,QAAQ,CAAC;QAAEP,IAAI,EAAE,eAAR;QAAyBE,IAAI,EAAEe;MAA/B,CAAD,CAAR;MACA,OAAOA,QAAP;IACD,CAfD,CAeE,OAAOE,GAAP,EAAY;MACZ,MAAMC,YAAY,GAAGD,GAAG,YAAYH,KAAf,GAAuBG,GAAG,CAACE,OAA3B,GAAqCC,MAAM,CAACH,GAAD,CAAhE;MACAZ,QAAQ,CAAC;QAAEP,IAAI,EAAE,WAAR;QAAqBG,KAAK,EAAEiB;MAA5B,CAAD,CAAR;MACAG,OAAO,CAACpB,KAAR,CAAcgB,GAAd;IACD;EACF,CAvBqB,EAuBnB,CAACV,cAAD,EAAiBC,UAAjB,EAA6BJ,SAA7B,CAvBmB,CAAtB;EAyBA,OAAO;IACLJ,IADK;IAELC,KAFK;IAGLF,OAHK;IAILW,aAJK;IAKLD;EALK,CAAP;AAOD;;AA7CDa","names":["starknetSignReducer","state","action","type","loading","data","error","undefined","useSignTypedData","typedData","dispatch","account","accountAddress","connectors","reset","signTypedData","accountInterface","connector","address","Error","response","signMessage","err","errorMessage","message","String","console","exports"],"sources":["../../src/hooks/sign.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}