{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/rmzlb/Dropbox/Mac (2)/Documents/GitHub/8mvmt-react/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _objectSpread = require(\"/Users/rmzlb/Dropbox/Mac (2)/Documents/GitHub/8mvmt-react/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transactionManagerReducer = void 0;\n\nfunction transactionManagerReducer(state, action) {\n  if (action.type === 'add_transaction') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      transactions: state.transactions.push(action.transaction)\n    });\n  } else if (action.type === 'remove_transaction') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      transactions: state.transactions.filter(function (tx) {\n        return tx.transactionHash !== action.transactionHash;\n      })\n    });\n  } else if (action.type === 'update_transaction') {\n    if (action.transactionResponse.status === 'NOT_RECEIVED') {\n      return state;\n    }\n\n    var entry = state.transactions.findEntry(function (tx) {\n      return tx.transactionHash === action.transactionHash;\n    });\n\n    if (!entry) {\n      return state;\n    }\n\n    var _entry = _slicedToArray(entry, 2),\n        transactionIndex = _entry[0],\n        oldTransaction = _entry[1];\n\n    var newTransaction = {\n      status: action.transactionResponse.status,\n      transaction: action.transactionResponse.transaction,\n      transactionHash: action.transactionHash,\n      lastUpdatedAt: action.lastUpdatedAt,\n      metadata: oldTransaction.metadata\n    };\n    return _objectSpread(_objectSpread({}, state), {}, {\n      transactions: state.transactions.set(transactionIndex, newTransaction)\n    });\n  }\n\n  return state;\n}\n\nexports.transactionManagerReducer = transactionManagerReducer;","map":{"version":3,"mappings":";;;;;;;;;;;AA2BA,SAAgBA,yBAAhB,CACEC,KADF,EAEEC,MAFF,EAEgB;EAEd,IAAIA,MAAM,CAACC,IAAP,KAAgB,iBAApB,EAAuC;IACrC,uCACKF,KADL;MAEEG,YAAY,EAAEH,KAAK,CAACG,YAAN,CAAmBC,IAAnB,CAAwBH,MAAM,CAACI,WAA/B;IAFhB;EAID,CALD,MAKO,IAAIJ,MAAM,CAACC,IAAP,KAAgB,oBAApB,EAA0C;IAC/C,uCACKF,KADL;MAEEG,YAAY,EAAEH,KAAK,CAACG,YAAN,CAAmBG,MAAnB,CACZ,UAACC,EAAD;QAAA,OAAQA,EAAE,CAACC,eAAH,KAAuBP,MAAM,CAACO,eAAtC;MAAA,CADY;IAFhB;EAMD,CAPM,MAOA,IAAIP,MAAM,CAACC,IAAP,KAAgB,oBAApB,EAA0C;IAC/C,IAAID,MAAM,CAACQ,mBAAP,CAA2BC,MAA3B,KAAsC,cAA1C,EAA0D;MACxD,OAAOV,KAAP;IACD;;IAED,IAAMW,KAAK,GAAGX,KAAK,CAACG,YAAN,CAAmBS,SAAnB,CACZ,UAACL,EAAD;MAAA,OAAQA,EAAE,CAACC,eAAH,KAAuBP,MAAM,CAACO,eAAtC;IAAA,CADY,CAAd;;IAIA,IAAI,CAACG,KAAL,EAAY;MACV,OAAOX,KAAP;IACD;;IAED,4BAA2CW,KAA3C;IAAA,IAAOE,gBAAP;IAAA,IAAyBC,cAAzB;;IAEA,IAAMC,cAAc,GAAgB;MAClCL,MAAM,EAAET,MAAM,CAACQ,mBAAP,CAA2BC,MADD;MAElCL,WAAW,EAAEJ,MAAM,CAACQ,mBAAP,CAA2BJ,WAFN;MAGlCG,eAAe,EAAEP,MAAM,CAACO,eAHU;MAIlCQ,aAAa,EAAEf,MAAM,CAACe,aAJY;MAKlCC,QAAQ,EAAEH,cAAc,CAACG;IALS,CAApC;IAQA,uCACKjB,KADL;MAEEG,YAAY,EAAEH,KAAK,CAACG,YAAN,CAAmBe,GAAnB,CAAuBL,gBAAvB,EAAyCE,cAAzC;IAFhB;EAID;;EAED,OAAOf,KAAP;AACD;;AA9CDmB","names":["transactionManagerReducer","state","action","type","transactions","push","transaction","filter","tx","transactionHash","transactionResponse","status","entry","findEntry","transactionIndex","oldTransaction","newTransaction","lastUpdatedAt","metadata","set","exports"],"sources":["../../../src/providers/transaction/reducer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}