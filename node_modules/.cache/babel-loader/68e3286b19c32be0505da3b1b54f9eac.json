{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useStarknetCall = void 0;\n\nconst react_1 = require(\"react\");\n\nconst block_1 = require(\"../providers/block\");\n\nfunction starknetCallReducer(state, action) {\n  if (action.type === 'set_call_response') {\n    return { ...state,\n      data: action.data,\n      error: undefined,\n      loading: false\n    };\n  } else if (action.type === 'set_call_error') {\n    return { ...state,\n      error: action.error,\n      loading: false\n    };\n  } else if (action.type === 'set_last_updated_at') {\n    return { ...state,\n      loading: false,\n      lastUpdatedAt: action.blockHash\n    };\n  }\n\n  return state;\n}\n\nfunction useStarknetCall(_ref) {\n  let {\n    contract,\n    method,\n    args,\n    options\n  } = _ref;\n  const [state, dispatch] = (0, react_1.useReducer)(starknetCallReducer, {\n    loading: true,\n    lastUpdatedAt: ''\n  });\n  const {\n    data: block\n  } = (0, block_1.useStarknetBlock)(); // default to true\n\n  const watch = options?.watch !== undefined ? options.watch : true;\n  const callContract = (0, react_1.useCallback)(async () => {\n    if (contract && method && args) {\n      return await contract.call(method, args);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [contract, method, JSON.stringify(args)]);\n  const refresh = (0, react_1.useCallback)(() => {\n    callContract().then(response => {\n      if (response) {\n        dispatch({\n          type: 'set_call_response',\n          data: response\n        });\n      }\n    }).catch(err => {\n      if (err.message) {\n        dispatch({\n          type: 'set_call_error',\n          error: err.message\n        });\n      } else {\n        dispatch({\n          type: 'set_call_error',\n          error: 'call failed'\n        });\n      }\n    });\n  }, [callContract]);\n  (0, react_1.useEffect)(() => {\n    if (block?.block_hash) {\n      if (block?.block_hash == state.lastUpdatedAt) return; // if not watching never refresh, but fetch at least once\n\n      if (!watch && state.lastUpdatedAt !== '') return;\n      refresh();\n      dispatch({\n        type: 'set_last_updated_at',\n        blockHash: block.block_hash\n      });\n    }\n  }, [block?.block_hash, state.lastUpdatedAt, refresh, watch]); // always refresh on contract, method, or args change\n\n  (0, react_1.useEffect)(() => {\n    refresh(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contract?.address, method, JSON.stringify(args)]);\n  return {\n    data: state.data,\n    loading: state.loading,\n    error: state.error,\n    refresh\n  };\n}\n\nexports.useStarknetCall = useStarknetCall;","map":{"version":3,"mappings":"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","names":["starknetCallReducer","state","action","type","data","error","undefined","loading","lastUpdatedAt","blockHash","useStarknetCall","contract","method","args","options","dispatch","block","watch","callContract","call","JSON","stringify","refresh","then","response","catch","err","message","block_hash","address","exports"],"sources":["../../src/hooks/call.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}